{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\workspace\\\\Theme\\\\Native\\\\recipes-app-react-native\\\\node_modules\\\\react-native-yandexmapkit\\\\src\\\\YandexMapView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, PropTypes } from 'react';\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { makeDebouncedGeocoding } from \"./YandexMapKit\";\nvar AndroidMapEvent = {\n  EMPTY: 0,\n  SCROLL_BEGIN: 1,\n  SCROLL_MOVE: 2,\n  SCROLL_END: 3,\n  ZOOM_BEGIN: 4,\n  ZOOM_MOVE: 5,\n  ZOOM_END: 6,\n  SCALE_BEGIN: 7,\n  SCALE_MOVE: 8,\n  SCALE_END: 9,\n  LONG_PRESS: 10\n};\n\nvar YandexMapView = function (_Component) {\n  _inherits(YandexMapView, _Component);\n\n  var _super = _createSuper(YandexMapView);\n\n  function YandexMapView() {\n    var _this;\n\n    _classCallCheck(this, YandexMapView);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(_args));\n    _this._prevRegion = null;\n    _this._map = null;\n    _this._debouncedGeocoding = null;\n\n    _this.renderMyLocationButton = function () {\n      var _this$props = _this.props,\n          showMyLocationButton = _this$props.showMyLocationButton,\n          renderMyLocationButton = _this$props.renderMyLocationButton,\n          myLocationButtonPosition = _this$props.myLocationButtonPosition,\n          rest = _objectWithoutProperties(_this$props, [\"showMyLocationButton\", \"renderMyLocationButton\", \"myLocationButtonPosition\"]);\n\n      var renderLocatioButton = renderMyLocationButton ? renderMyLocationButton : _this.renderDefaultMyLocationButton;\n      var locationWrapperStyle = myLocationButtonPosition ? myLocationButtonPosition : styles.button;\n      if (!showMyLocationButton) return null;\n      return React.createElement(View, {\n        style: locationWrapperStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }\n      }, renderLocatioButton());\n    };\n\n    _this.onMapEventInternal = function (event) {\n      var _event$nativeEvent = event.nativeEvent,\n          latitude = _event$nativeEvent.latitude,\n          longitude = _event$nativeEvent.longitude,\n          latitudeDelta = _event$nativeEvent.latitudeDelta,\n          longitudeDelta = _event$nativeEvent.longitudeDelta,\n          type = _event$nativeEvent.type;\n      _this._prevRegion = {\n        latitude: latitude,\n        longitude: longitude,\n        latitudeDelta: latitudeDelta,\n        longitudeDelta: longitudeDelta\n      };\n\n      if (_this.props.onInteraction) {\n        _this.props.onInteraction(event.nativeEvent);\n      }\n\n      var _this$props2 = _this.props,\n          geocodingEnabled = _this$props2.geocodingEnabled,\n          disableAndroidGeocoding = _this$props2.disableAndroidGeocoding;\n\n      if (geocodingEnabled && (Platform.OS === 'ios' || disableAndroidGeocoding) && (type === undefined || type === AndroidMapEvent.SCALE_END || type === AndroidMapEvent.SCROLL_END || type === AndroidMapEvent.ZOOM_END)) {\n        _this._debouncedGeocoding(latitude, longitude);\n      }\n    };\n\n    _this.onGeocodingEventInternal = function (event) {\n      if (_this.props.onGeocoding) {\n        _this.props.onGeocoding(event.nativeEvent);\n      }\n    };\n\n    _this.runCommand = function (name, args) {\n      switch (Platform.OS) {\n        case 'android':\n          NativeModules.UIManager.dispatchViewManagerCommand(findNodeHandle(_this._map), NativeModules.UIManager.RNYandexMapView.Commands[name], args);\n          break;\n\n        case 'ios':\n          NativeModules.RNYandexMapViewManager[name].apply(NativeModules.RNYandexMapViewManager[name], [findNodeHandle(_this._map)].concat(_toConsumableArray(args)));\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.animateToCoordinate = function (coordinate) {\n      _this.runCommand('animateToCoordinate', [coordinate]);\n    };\n\n    _this.renderDefaultMyLocationButton = function () {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.animateToCoordinate();\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.iconWrapper,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        source: require(\"./assets/my_location.png\"),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(YandexMapView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props3 = this.props,\n          region = _this$props3.region,\n          inititalRegion = _this$props3.inititalRegion;\n\n      if (region) {\n        this._map.setNativeProps({\n          region: region\n        });\n      } else if (inititalRegion) {\n        this._map.setNativeProps({\n          region: inititalRegion\n        });\n      }\n\n      var _this$props4 = this.props,\n          geocodingOptions = _this$props4.geocodingOptions,\n          geocodingApiKey = _this$props4.geocodingApiKey,\n          onGeocoding = _this$props4.onGeocoding;\n      this._debouncedGeocoding = makeDebouncedGeocoding(geocodingOptions, onGeocoding, geocodingApiKey);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.geocodingApiKey != this.props.geocodingApiKey || nextProps.geocodingOptions != this.props.geocodingOptions || nextProps.onGeocoding != this.props.onGeocoding) {\n        this._debouncedGeocoding = this.createDebouncedGeocoding(nextProps.geocodingOptions, nextProps.onGeocoding, nextProps.geocodingApiKey);\n      }\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps) {\n      if (!this._prevRegion || !nextProps.region) return;\n\n      if (this._prevRegion.latitude !== nextProps.region.latitude || this._prevRegion.longitude !== nextProps.region.longitude || this._prevRegion.latitudeDelta !== nextProps.region.latitudeDelta || this._prevRegion.longitudeDelta !== nextProps.region.longitudeDelta) {\n        this._map.setNativeProps({\n          region: nextProps.region\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debouncedGeocoding) {\n        this._debouncedGeocoding.cancel();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          region = _this$props5.region,\n          inititalRegion = _this$props5.inititalRegion,\n          style = _this$props5.style,\n          showMyLocationButton = _this$props5.showMyLocationButton,\n          renderMyLocationButton = _this$props5.renderMyLocationButton,\n          myLocationButtonPosition = _this$props5.myLocationButtonPosition,\n          geocodingEnabled = _this$props5.geocodingEnabled,\n          disableAndroidGeocoding = _this$props5.disableAndroidGeocoding,\n          rest = _objectWithoutProperties(_this$props5, [\"region\", \"inititalRegion\", \"style\", \"showMyLocationButton\", \"renderMyLocationButton\", \"myLocationButtonPosition\", \"geocodingEnabled\", \"disableAndroidGeocoding\"]);\n\n      var gcEnabled = geocodingEnabled && (Platform.OS === 'ios' || !disableAndroidGeocoding);\n      return React.createElement(View, {\n        style: [styles.container, style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      }, React.createElement(RNYandexMapView, _extends({\n        ref: function ref(map) {\n          _this2._map = map;\n        }\n      }, rest, {\n        style: styles.container,\n        onMapEvent: this.onMapEventInternal,\n        geocodingEnabled: gcEnabled,\n        onGeocodingEvent: this.onGeocodingEventInternal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      })), React.createElement(View, {\n        style: StyleSheet.absoluteFill,\n        pointerEvents: \"box-none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, this.renderMyLocationButton()));\n    }\n  }]);\n\n  return YandexMapView;\n}(Component);\n\nYandexMapView.propTypes = _objectSpread({\n  showMyLocationButton: PropTypes.bool,\n  myLocationButtonPosition: PropTypes.any,\n  renderMyLocationButton: PropTypes.func,\n  showBuiltInScreenButtons: PropTypes.bool,\n  showFindMeButton: PropTypes.bool,\n  showJamsButton: PropTypes.bool,\n  showScaleView: PropTypes.bool,\n  showZoomButtons: PropTypes.bool,\n  interactive: PropTypes.bool,\n  hdMode: PropTypes.bool,\n  geocodingEnabled: PropTypes.bool,\n  geocodingOptions: PropTypes.object,\n  geocodingApiKey: PropTypes.string,\n  disableAndroidGeocoding: PropTypes.bool,\n  showTraffic: PropTypes.bool,\n  showMyLocation: PropTypes.bool,\n  nightMode: PropTypes.bool,\n  region: PropTypes.shape({\n    latitude: PropTypes.number,\n    longitude: PropTypes.number,\n    latitudeDelta: PropTypes.number,\n    longitudeDelta: PropTypes.number\n  }),\n  inititalRegion: PropTypes.shape({\n    latitude: PropTypes.number,\n    longitude: PropTypes.number,\n    latitudeDelta: PropTypes.number,\n    longitudeDelta: PropTypes.number\n  }),\n  onInteraction: PropTypes.func,\n  onGeocoding: PropTypes.func\n}, View.propTypes);\nYandexMapView.defaultProps = {\n  geocodingOptions: {\n    sco: 'latlong',\n    kind: 'house'\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  iconWrapper: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    backgroundColor: 'rgb(220,220,220)',\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 2,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 3\n  },\n  button: {\n    position: 'absolute',\n    top: 16,\n    right: 16\n  }\n});\nvar RNYandexMapView = requireNativeComponent('RNYandexMapView', YandexMapView, {\n  nativeOnly: {\n    onMapEvent: true,\n    onGeocodingEvent: true\n  }\n});\nmodule.exports = YandexMapView;","map":{"version":3,"sources":["E:/workspace/Theme/Native/recipes-app-react-native/node_modules/react-native-yandexmapkit/src/YandexMapView.js"],"names":["React","Component","PropTypes","requireNativeComponent","makeDebouncedGeocoding","AndroidMapEvent","EMPTY","SCROLL_BEGIN","SCROLL_MOVE","SCROLL_END","ZOOM_BEGIN","ZOOM_MOVE","ZOOM_END","SCALE_BEGIN","SCALE_MOVE","SCALE_END","LONG_PRESS","YandexMapView","_prevRegion","_map","_debouncedGeocoding","renderMyLocationButton","props","showMyLocationButton","myLocationButtonPosition","rest","renderLocatioButton","renderDefaultMyLocationButton","locationWrapperStyle","styles","button","onMapEventInternal","event","nativeEvent","latitude","longitude","latitudeDelta","longitudeDelta","type","onInteraction","geocodingEnabled","disableAndroidGeocoding","Platform","OS","undefined","onGeocodingEventInternal","onGeocoding","runCommand","name","args","NativeModules","UIManager","dispatchViewManagerCommand","findNodeHandle","RNYandexMapView","Commands","RNYandexMapViewManager","apply","animateToCoordinate","coordinate","iconWrapper","require","region","inititalRegion","setNativeProps","geocodingOptions","geocodingApiKey","nextProps","createDebouncedGeocoding","cancel","style","gcEnabled","container","map","StyleSheet","absoluteFill","propTypes","bool","any","func","showBuiltInScreenButtons","showFindMeButton","showJamsButton","showScaleView","showZoomButtons","interactive","hdMode","object","string","showTraffic","showMyLocation","nightMode","shape","number","View","defaultProps","sco","kind","create","flex","width","height","borderRadius","backgroundColor","alignItems","justifyContent","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","position","top","right","nativeOnly","onMapEvent","onGeocodingEvent","module","exports"],"mappings":"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","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport { \n  requireNativeComponent, \n  findNodeHandle, \n  NativeModules, \n  View, \n  StyleSheet, \n  Platform,\n  Image,\n  TouchableOpacity } from 'react-native'; \nimport {makeDebouncedGeocoding} from './YandexMapKit';\n\nconst AndroidMapEvent = {\n  EMPTY: 0,\n  SCROLL_BEGIN: 1,\n  SCROLL_MOVE: 2,\n  SCROLL_END: 3,\n  ZOOM_BEGIN: 4,\n  ZOOM_MOVE: 5,\n  ZOOM_END: 6,\n  SCALE_BEGIN: 7,\n  SCALE_MOVE: 8,\n  SCALE_END: 9,\n  LONG_PRESS: 10,\n};\n\nclass YandexMapView extends Component {\n\n  static propTypes = {\n    //React-native UI props\n\n    showMyLocationButton: PropTypes.bool,\n    myLocationButtonPosition: PropTypes.any,\n    renderMyLocationButton: PropTypes.func,\n\n    //Android-only props\n\n    showBuiltInScreenButtons: PropTypes.bool,\n    showFindMeButton: PropTypes.bool,\n    showJamsButton: PropTypes.bool,\n    showScaleView: PropTypes.bool,\n    showZoomButtons: PropTypes.bool,\n    interactive: PropTypes.bool,\n    hdMode: PropTypes.bool,\n\n    //Geocoding\n    geocodingEnabled: PropTypes.bool,\n    geocodingOptions: PropTypes.object,\n    geocodingApiKey: PropTypes.string,\n    disableAndroidGeocoding: PropTypes.bool,\n    \n    //Cross-platform props\n\n    showTraffic: PropTypes.bool,\n    showMyLocation: PropTypes.bool,\n    nightMode: PropTypes.bool,\n\n    region: PropTypes.shape({\n      latitude: PropTypes.number,\n      longitude: PropTypes.number,\n      latitudeDelta: PropTypes.number,\n      longitudeDelta: PropTypes.number,\n    }),\n    inititalRegion: PropTypes.shape({\n      latitude: PropTypes.number,\n      longitude: PropTypes.number,\n      latitudeDelta: PropTypes.number,\n      longitudeDelta: PropTypes.number,\n    }),\n    onInteraction: PropTypes.func, \n    onGeocoding: PropTypes.func, \n    ...View.propTypes \n  };\n\n  static defaultProps = {\n    geocodingOptions: {\n      sco: 'latlong',\n      kind: 'house',\n    },\n  };\n\n  _prevRegion = null;\n  _map = null;\n  _debouncedGeocoding = null;\n\n  componentDidMount() {\n    const { region, inititalRegion } = this.props;\n    if (region) {\n      this._map.setNativeProps({ region });\n    } else if (inititalRegion) {\n      this._map.setNativeProps({ region: inititalRegion });\n    }\n    const {geocodingOptions, geocodingApiKey, onGeocoding} = this.props;\n    this._debouncedGeocoding = makeDebouncedGeocoding(geocodingOptions, onGeocoding, geocodingApiKey);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.geocodingApiKey != this.props.geocodingApiKey || \n      nextProps.geocodingOptions != this.props.geocodingOptions ||\n      nextProps.onGeocoding != this.props.onGeocoding\n    ){\n      this._debouncedGeocoding = this.createDebouncedGeocoding(nextProps.geocodingOptions, nextProps.onGeocoding, nextProps.geocodingApiKey);\n    }\n  }\n\n  componentWillUpdate(nextProps) {\n    if (!this._prevRegion || !nextProps.region) \n      return;\n    if (\n      this._prevRegion.latitude  !== nextProps.region.latitude ||\n      this._prevRegion.longitude  !== nextProps.region.longitude ||\n      this._prevRegion.latitudeDelta !== nextProps.region.latitudeDelta ||\n      this._prevRegion.longitudeDelta !== nextProps.region.longitudeDelta\n    ) {\n      this._map.setNativeProps({ region: nextProps.region });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._debouncedGeocoding){\n      this._debouncedGeocoding.cancel();\n    }\n  }\n\n  render() {\n    //Omit region and set it via setNativeProps\n    const {region, inititalRegion, style, showMyLocationButton, renderMyLocationButton, myLocationButtonPosition, geocodingEnabled, disableAndroidGeocoding, ...rest} = this.props;\n    const gcEnabled = geocodingEnabled && (Platform.OS === 'ios' || !disableAndroidGeocoding);\n    return (\n      <View style={[styles.container, style]}>\n        <RNYandexMapView ref={map => {this._map = map}} \n                        {...rest} \n                        style={styles.container}\n                        onMapEvent={this.onMapEventInternal}\n                        geocodingEnabled={gcEnabled}\n                        onGeocodingEvent={this.onGeocodingEventInternal}\n                        />\n        <View style={StyleSheet.absoluteFill} pointerEvents=\"box-none\">\n          { this.renderMyLocationButton() }\n        </View>\n      </View>\n    );\n  }\n\n  renderMyLocationButton = () => {\n    const {showMyLocationButton, renderMyLocationButton, myLocationButtonPosition, ...rest} = this.props;\n        const renderLocatioButton = renderMyLocationButton ? renderMyLocationButton : this.renderDefaultMyLocationButton;\n    const locationWrapperStyle = myLocationButtonPosition ? myLocationButtonPosition : styles.button;\n    if (!showMyLocationButton)\n      return null;\n    return (\n      <View style={locationWrapperStyle}>\n        {renderLocatioButton()}\n      </View>\n    );\n  };\n\n  onMapEventInternal = (event) => {\n    const {latitude, longitude, latitudeDelta, longitudeDelta, type} = event.nativeEvent;\n    this._prevRegion = {latitude, longitude, latitudeDelta, longitudeDelta};\n    if (this.props.onInteraction){\n      this.props.onInteraction(event.nativeEvent);\n    }\n    \n    //Handle geocoding\n    const {geocodingEnabled, disableAndroidGeocoding} = this.props;\n    if (\n      geocodingEnabled && \n      (Platform.OS === 'ios' || disableAndroidGeocoding) &&\n      (type === undefined || type === AndroidMapEvent.SCALE_END || type === AndroidMapEvent.SCROLL_END || type === AndroidMapEvent.ZOOM_END)\n    )\n    {\n      this._debouncedGeocoding(latitude, longitude);\n    }\n  };\n\n  //Native android-only event\n  onGeocodingEventInternal = (event) => {\n    if (this.props.onGeocoding){\n      this.props.onGeocoding(event.nativeEvent);\n    }\n  };\n\n  runCommand = (name, args) => {\n    switch (Platform.OS) {\n      case 'android':\n        NativeModules.UIManager.dispatchViewManagerCommand(\n          findNodeHandle(this._map),\n          NativeModules.UIManager.RNYandexMapView.Commands[name],\n          args\n        );\n        break;\n\n      case 'ios':\n        NativeModules.RNYandexMapViewManager[name].apply(\n          NativeModules.RNYandexMapViewManager[name],\n          [findNodeHandle(this._map), ...args]\n        );\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  /**\n   * Animates to given {latitude,longitude}, or to user's location, if coordinate is undefined\n   */\n  animateToCoordinate = (coordinate) => {\n    this.runCommand('animateToCoordinate', [coordinate]);\n  };\n\n  renderDefaultMyLocationButton = () => {\n    return (\n      <TouchableOpacity onPress={() => this.animateToCoordinate()}>\n        <View style={styles.iconWrapper}>\n          <Image source={require('./assets/my_location.png')}/>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  iconWrapper: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    backgroundColor: 'rgb(220,220,220)',\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 2,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 3,\n  },\n  button: {\n    position: 'absolute',\n    top: 16,\n    right: 16,\n  },\n});\n\nconst RNYandexMapView = requireNativeComponent('RNYandexMapView', YandexMapView, {nativeOnly: {onMapEvent: true, onGeocodingEvent: true}});\n\nmodule.exports = YandexMapView;"]},"metadata":{},"sourceType":"module"}