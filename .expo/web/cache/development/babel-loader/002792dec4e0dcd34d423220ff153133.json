{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\workspace\\\\Native\\\\TaxiCall\\\\src\\\\screens\\\\rider\\\\RiderHomeContents.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Content, Container, Header, Left, Icon, Footer, Body, Card } from 'native-base';\nimport MapView, { PROVIDER_GOOGLE, AnimatedRegion } from 'react-native-maps';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ASPECT_RATIO = width / height;\nvar LATITUDE = 0;\nvar LONGITUDE = 0;\nvar LATITUDE_DELTA = 0.0922;\nvar LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\n\nvar RiderHomeContents = function (_React$Component) {\n  _inherits(RiderHomeContents, _React$Component);\n\n  var _super = _createSuper(RiderHomeContents);\n\n  function RiderHomeContents(props) {\n    var _this;\n\n    _classCallCheck(this, RiderHomeContents);\n\n    _this = _super.call(this, props);\n\n    _this._pickUpLocation = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._getDriverRequestDetails = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      region: {\n        latitude: LATITUDE,\n        longitude: LONGITUDE,\n        latitudeDelta: LATITUDE_DELTA,\n        longitudeDelta: LONGITUDE_DELTA\n      },\n      isModalVisible: false,\n      isConfirmButton: false,\n      isMounted: false\n    };\n    return _this;\n  }\n\n  _createClass(RiderHomeContents, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        _this2.setState({\n          region: {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n            latitudeDelta: LATITUDE_DELTA,\n            longitudeDelta: LONGITUDE_DELTA\n          }\n        });\n      }, function (error) {\n        return console.log(error.message);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 20000,\n        maximumAge: 1000\n      });\n      this.watchID = navigator.geolocation.watchPosition(function (position) {\n        _this2.setState({\n          region: {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n            latitudeDelta: LATITUDE_DELTA,\n            longitudeDelta: LONGITUDE_DELTA\n          }\n        });\n      }, function (error) {\n        return _this2.setState({\n          error: error.message\n        });\n      }, {\n        enableHighAccuracy: true,\n        timeout: 20000,\n        maximumAge: 1000,\n        distanceFilter: 10\n      });\n\n      this._getDriverRequestDetails();\n\n      YellowBox.ignoreWarnings(['Encountered an error loading page']);\n      console.disableYellowBox = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevState) {\n      if (this.state.region !== prevState.region) {}\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }\n      }, React.createElement(Header, {\n        style: {\n          backgroundColor: '#42A5F5',\n          height: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }, React.createElement(Left, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableHighlight, {\n        style: {\n          width: 50,\n          height: 50,\n          borderRadius: 50,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onPress: function onPress() {\n          return _this3.props.navigation.toggleDrawer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, React.createElement(Icon, {\n        name: \"menu\",\n        style: {\n          color: '#ffffff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      }))), React.createElement(Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#ffffff',\n          fontSize: 20,\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, \"Taxi Rider\"))), React.createElement(Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }, React.createElement(MapView, {\n        provider: PROVIDER_GOOGLE,\n        style: styles.map,\n        showsUserLocation: true,\n        showsBuildings: true,\n        region: this.state.region,\n        onRegionChange: function onRegionChange(region) {\n          return _this3.setState({\n            region: region\n          });\n        },\n        onRegionChangeComplete: function onRegionChangeComplete(region) {\n          return _this3.setState({\n            region: region\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, React.createElement(MapView.Marker, {\n        coordinate: this.state.region,\n        pinColor: \"#E91E63\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        source: require(\"../Images/marker.png\"),\n        style: {\n          width: 100,\n          height: 100,\n          borderRadius: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      })), React.createElement(Image, {\n        source: require(\"../Images/driver_car.png\"),\n        style: {\n          width: 30,\n          height: 60,\n          position: 'absolute',\n          top: 150,\n          left: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: {\n          width: 30,\n          height: 60,\n          position: 'absolute',\n          top: 150,\n          left: 100,\n          elevation: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }\n      }, \"John\"), React.createElement(Image, {\n        source: require(\"../Images/driver_car.png\"),\n        style: {\n          width: 30,\n          height: 60,\n          position: 'absolute',\n          top: 150,\n          left: 250\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: {\n          width: 30,\n          height: 60,\n          position: 'absolute',\n          top: 150,\n          left: 250,\n          elevation: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }\n      }, \"John\"), React.createElement(Image, {\n        source: require(\"../Images/driver_car.png\"),\n        style: {\n          width: 30,\n          height: 60,\n          position: 'absolute',\n          top: 250,\n          left: 170\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: {\n          width: 30,\n          height: 60,\n          position: 'absolute',\n          top: 150,\n          left: 250,\n          elevation: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }\n      }, \"John\"))), React.createElement(Card, {\n        style: styles.searchBoxView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.pickupImage,\n        source: require(\"../Images/pickup.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        style: styles.DropUpLocation,\n        placeholder: \"PickUp Location\",\n        underlineColorAndroid: \"#ffffff\",\n        selectionColor: \"#42A5F5\",\n        placeholderTextColor: \"#000000\",\n        onFocus: function onFocus() {\n          return _this3.props.navigation.navigate('pickUpLocation');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }\n      }))), React.createElement(Footer, {\n        style: styles.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.DoneButton,\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('pickUpLocation');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#ffffff',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 15\n        }\n      }, \"CONFIRM\"))));\n    }\n  }, {\n    key: \"storeUserLocation\",\n    value: function storeUserLocation() {}\n  }]);\n\n  return RiderHomeContents;\n}(React.Component);\n\nRiderHomeContents.Firstname = '';\nRiderHomeContents.Lastname = '';\nRiderHomeContents.navigationOptions = {\n  drawerIcon: function drawerIcon(_ref) {\n    var tintColor = _ref.tintColor;\n    return React.createElement(Image, {\n      source: require(\"../Images/home.png\"),\n      style: {\n        width: 25,\n        height: 25\n      },\n      __self: RiderHomeContents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    });\n  }\n};\nexport { RiderHomeContents as default };\nvar styles = StyleSheet.create({\n  containerView: {\n    flex: 1,\n    backgroundColor: '#42A5F1'\n  },\n  footer: {\n    backgroundColor: '#ffffff',\n    height: 50,\n    paddingBottom: 10\n  },\n  map: {\n    height: 610,\n    marginTop: 0\n  },\n  searchBoxView: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    width: 320,\n    minHeight: 45,\n    position: 'absolute',\n    top: 10,\n    left: 20,\n    borderRadius: 5,\n    elevation: 5\n  },\n  searchIcon: {\n    color: '#42A5F5',\n    marginTop: 12,\n    marginLeft: 20\n  },\n  DropUpLocation: {\n    alignSelf: 'stretch',\n    width: 280,\n    paddingBottom: 2,\n    marginTop: -3,\n    marginLeft: 8,\n    backgroundColor: '#fff',\n    fontSize: 17\n  },\n  pickupImage: {\n    marginLeft: 8,\n    marginTop: 10,\n    width: 25,\n    height: 25\n  },\n  DoneButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#42A5F1',\n    height: 40,\n    width: 350,\n    marginLeft: 3\n  }\n});\nAppRegistry.registerComponent('RiderHomeContents', function () {\n  return RiderHomeContents;\n});","map":{"version":3,"sources":["E:/workspace/Native/TaxiCall/src/screens/rider/RiderHomeContents.js"],"names":["React","AsyncStorage","Content","Container","Header","Left","Icon","Footer","Body","Card","MapView","PROVIDER_GOOGLE","AnimatedRegion","Dimensions","get","width","height","ASPECT_RATIO","LATITUDE","LONGITUDE","LATITUDE_DELTA","LONGITUDE_DELTA","RiderHomeContents","props","_pickUpLocation","_getDriverRequestDetails","state","region","latitude","longitude","latitudeDelta","longitudeDelta","isModalVisible","isConfirmButton","isMounted","navigator","geolocation","getCurrentPosition","position","setState","coords","error","console","log","message","enableHighAccuracy","timeout","maximumAge","watchID","watchPosition","distanceFilter","YellowBox","ignoreWarnings","disableYellowBox","prevState","backgroundColor","borderRadius","alignItems","justifyContent","navigation","toggleDrawer","color","fontSize","fontWeight","styles","map","require","top","left","elevation","searchBoxView","pickupImage","DropUpLocation","navigate","footer","DoneButton","Component","Firstname","Lastname","navigationOptions","drawerIcon","tintColor","StyleSheet","create","containerView","flex","paddingBottom","marginTop","flexDirection","minHeight","searchIcon","marginLeft","alignSelf","AppRegistry","registerComponent"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Button,\r\n  Image,\r\n  TouchableHighlight,\r\n  Dimensions,\r\n  AppRegistry,\r\n  TextInput,\r\n  YellowBox,\r\n  AppState,\r\n  AsyncStorage,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport {\r\n  Content,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Icon,\r\n  Footer,\r\n  Body,\r\n  Card,\r\n} from 'native-base';\r\n\r\nimport MapView, { PROVIDER_GOOGLE, AnimatedRegion } from 'react-native-maps';\r\n// import GooglePlacesInput from './RiderPlaceSearch';\r\n// import * as firebase from 'firebase';\r\n// import ApiKeys from '../constants/ApiKeys';\r\n\r\n//-----------------------------------------------------------------------------------//\r\n/*\r\nMAP COMPONENTS DEFINITION\r\n*/\r\n//-----------------------------------------------------------------------------------//\r\n\r\nlet { width, height } = Dimensions.get('window');\r\nconst ASPECT_RATIO = width / height;\r\nconst LATITUDE = 0;\r\nconst LONGITUDE = 0;\r\nconst LATITUDE_DELTA = 0.0922;\r\nconst LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\r\n//-----------------------------------------------------------------------------------//\r\n\r\nexport default class RiderHomeContents extends React.Component {\r\n  static DriverID;\r\n  static Firstname = '';\r\n  static Lastname = '';\r\n  //------------CONSTRUCTOR--------------------  //\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      region: {\r\n        latitude: LATITUDE,\r\n        longitude: LONGITUDE,\r\n        latitudeDelta: LATITUDE_DELTA,\r\n        longitudeDelta: LONGITUDE_DELTA,\r\n      },\r\n      isModalVisible: false,\r\n      isConfirmButton: false,\r\n      isMounted: false,\r\n    };\r\n    // if (!firebase.apps.length) {\r\n    //   firebase.initializeApp(ApiKeys.FirebaseConfig);\r\n    // }\r\n  }\r\n  //------------NAVIGATION OPTION--------------------//\r\n  static navigationOptions = {\r\n    drawerIcon: ({ tintColor }) => (\r\n      <Image\r\n        source={require('../Images/home.png')}\r\n        style={{ width: 25, height: 25 }}\r\n      />\r\n    ),\r\n  };\r\n  //-----------COMPONENTDIDMOUNT------------------//\r\n  componentDidMount() {\r\n    //this.isMounted = true;\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        this.setState({\r\n          region: {\r\n            latitude: position.coords.latitude,\r\n            longitude: position.coords.longitude,\r\n            latitudeDelta: LATITUDE_DELTA,\r\n            longitudeDelta: LONGITUDE_DELTA,\r\n          },\r\n        });\r\n      },\r\n      error => console.log(error.message),\r\n      { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 },\r\n    );\r\n\r\n    this.watchID = navigator.geolocation.watchPosition(\r\n      position => {\r\n        this.setState({\r\n          region: {\r\n            latitude: position.coords.latitude,\r\n            longitude: position.coords.longitude,\r\n            latitudeDelta: LATITUDE_DELTA,\r\n            longitudeDelta: LONGITUDE_DELTA,\r\n          },\r\n        });\r\n      },\r\n      //error\r\n      error => this.setState({ error: error.message }),\r\n      {\r\n        enableHighAccuracy: true,\r\n        timeout: 20000,\r\n        maximumAge: 1000,\r\n        distanceFilter: 10,\r\n      },\r\n    );\r\n\r\n    this._getDriverRequestDetails();\r\n\r\n    //\r\n    //desable the warnings in yellow box\r\n    YellowBox.ignoreWarnings(['Encountered an error loading page']);\r\n    console.disableYellowBox = true;\r\n  }\r\n\r\n  //---------------------------------------------\r\n  //COMPONENT UPDATE\r\n  //---------------------------------------------\r\n  componentDidUpdate(prevState) {\r\n    // Typical usage (don't forget to compare props):\r\n    if (this.state.region !== prevState.region) {\r\n      // AppState.addEventListener('change',this.storeUserLocation());\r\n    }\r\n  }\r\n\r\n  //----------------------------------------------\r\n  //----------------------------------------------\r\n\r\n  componentWillUnmount() {\r\n    //  this.isMounted = false;\r\n    //  if(!this.state.isMounted){\r\n    // navigator.geolocation.clearWatch(this.watchID);\r\n    //  }\r\n  }\r\n  //------------RENDER FUNCTION--------------------//\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Header style={{ backgroundColor: '#42A5F5', height: 60 }}>\r\n          <Left>\r\n            <TouchableHighlight\r\n              style={{\r\n                width: 50,\r\n                height: 50,\r\n                borderRadius: 50,\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n              onPress={() => this.props.navigation.toggleDrawer()}\r\n            >\r\n              <Icon name=\"menu\" style={{ color: '#ffffff' }} />\r\n            </TouchableHighlight>\r\n          </Left>\r\n          <Body>\r\n            <Text\r\n              style={{\r\n                color: '#ffffff',\r\n                fontSize: 20,\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              Taxi Rider\r\n            </Text>\r\n          </Body>\r\n        </Header>\r\n\r\n        <Content>\r\n          <View style={{ justifyContent: 'center' }}>\r\n            <MapView\r\n              provider={PROVIDER_GOOGLE}\r\n              style={styles.map}\r\n              showsUserLocation={true}\r\n              showsBuildings={true}\r\n              region={this.state.region}\r\n              onRegionChange={region => this.setState({ region })}\r\n              onRegionChangeComplete={region => this.setState({ region })}\r\n            >\r\n              <MapView.Marker coordinate={this.state.region} pinColor=\"#E91E63\">\r\n                <Image\r\n                  source={require('../Images/marker.png')}\r\n                  style={{ width: 100, height: 100, borderRadius: 100 }}\r\n                />\r\n              </MapView.Marker>\r\n\r\n              <Image\r\n                source={require('../Images/driver_car.png')}\r\n                style={{\r\n                  width: 30,\r\n                  height: 60,\r\n                  position: 'absolute',\r\n                  top: 150,\r\n                  left: 100,\r\n                }}\r\n              />\r\n              <Text\r\n                style={{\r\n                  width: 30,\r\n                  height: 60,\r\n                  position: 'absolute',\r\n                  top: 150,\r\n                  left: 100,\r\n                  elevation: 10,\r\n                }}\r\n              >\r\n                John\r\n              </Text>\r\n              <Image\r\n                source={require('../Images/driver_car.png')}\r\n                style={{\r\n                  width: 30,\r\n                  height: 60,\r\n                  position: 'absolute',\r\n                  top: 150,\r\n                  left: 250,\r\n                }}\r\n              />\r\n              <Text\r\n                style={{\r\n                  width: 30,\r\n                  height: 60,\r\n                  position: 'absolute',\r\n                  top: 150,\r\n                  left: 250,\r\n                  elevation: 10,\r\n                }}\r\n              >\r\n                John\r\n              </Text>\r\n              <Image\r\n                source={require('../Images/driver_car.png')}\r\n                style={{\r\n                  width: 30,\r\n                  height: 60,\r\n                  position: 'absolute',\r\n                  top: 250,\r\n                  left: 170,\r\n                }}\r\n              />\r\n              <Text\r\n                style={{\r\n                  width: 30,\r\n                  height: 60,\r\n                  position: 'absolute',\r\n                  top: 150,\r\n                  left: 250,\r\n                  elevation: 10,\r\n                }}\r\n              >\r\n                John\r\n              </Text>\r\n            </MapView>\r\n          </View>\r\n          <Card style={styles.searchBoxView}>\r\n            <Image\r\n              style={styles.pickupImage}\r\n              source={require('../Images/pickup.png')}\r\n            />\r\n            <TextInput\r\n              style={styles.DropUpLocation}\r\n              placeholder=\"PickUp Location\"\r\n              //onChangeText={(password)=>this.setState({password})}\r\n              underlineColorAndroid=\"#ffffff\"\r\n              selectionColor=\"#42A5F5\"\r\n              placeholderTextColor=\"#000000\"\r\n              onFocus={() => this.props.navigation.navigate('pickUpLocation')}\r\n            />\r\n          </Card>\r\n        </Content>\r\n        <Footer style={styles.footer}>\r\n          <TouchableOpacity\r\n              style={styles.DoneButton}\r\n              onPress={() => this.props.navigation.navigate('pickUpLocation')}\r\n            >\r\n              <Text style={{ color: '#ffffff', fontWeight: 'bold' }}>\r\n                CONFIRM\r\n              </Text>\r\n            </TouchableOpacity>\r\n          {/* {this.state.isConfirmButton ? (\r\n            <TouchableOpacity\r\n              style={styles.DoneButton}\r\n              onPress={() => this.props.navigation.navigate('pickUpLocation')}\r\n            >\r\n              <Text style={{ color: '#ffffff', fontWeight: 'bold' }}>\r\n                CONFIRM\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : null} */}\r\n          {/* {!this.state.isModalVisible ? (\r\n            <View\r\n              style={{\r\n                width: 300,\r\n                height: 70,\r\n                backgroundColor: '#ffffff',\r\n                position: 'absolute',\r\n                flexDirection: 'row',\r\n              }}\r\n            >\r\n              <Image\r\n                source={require('../Images/avatar.png')}\r\n                style={{\r\n                  width: 50,\r\n                  height: 50,\r\n                  borderRadius: 50,\r\n                  marginTop: 10,\r\n                  marginLeft: 7,\r\n                }}\r\n              />\r\n              <Text style={{ fontSize: 18, marginTop: 18, fontWeight: 'bold' }}>\r\n                {RiderHomeContents.Firstname + ' ' + RiderHomeContents.Lastname}\r\n              </Text>\r\n              <Text style={{ fontSize: 18, marginTop: 18, color: '#42A5F5' }}>\r\n                {' '}\r\n                Accepted\r\n              </Text>\r\n            </View>\r\n          ) : null} */}\r\n        </Footer>\r\n      </Container>\r\n    );\r\n  }\r\n  _pickUpLocation = async () => {\r\n    //this.props.navigation.navigate('pickUpLocation');\r\n    //alert(this.state.region.latitude);\r\n  };\r\n  _getDriverRequestDetails = async () => {\r\n    // AsyncStorage.getItem('riderId')\r\n    //   .then(result =>\r\n    //     firebase\r\n    //       .database()\r\n    //       .ref('/Ride_Request/' + result)\r\n    //       .once('value')\r\n    //       .then(function (snapshot) {\r\n    //         if (snapshot.exists()) {\r\n    //           DriverID = snapshot.child('driverID').val();\r\n    //         }\r\n    //       })\r\n    //       .then(\r\n    //         () => {\r\n    //           if (!DriverID == '') {\r\n    //             this.setState({ isModalVisible: true });\r\n    //           }\r\n\r\n    //           firebase\r\n    //             .database()\r\n    //             .ref('/Drivers/' + DriverID + '/Details')\r\n    //             .once('value')\r\n    //             .then(function (snapshot) {\r\n    //               RiderHomeContents.Firstname = snapshot\r\n    //                 .child('firstname')\r\n    //                 .val();\r\n    //               RiderHomeContents.Lastname = snapshot.child('lastname').val();\r\n    //             })\r\n    //             .then(\r\n    //               () => {\r\n    //                 console.log('firstname' + RiderHomeContents.Firstname);\r\n    //               },\r\n    //               error => {\r\n    //                 // console.error(\"error\"+error);\r\n    //                 // console.log(\"the user id:\"+userId);\r\n    //               },\r\n    //             );\r\n    //         },\r\n    //         error => {\r\n    //           console.error('error' + error);\r\n    //           //console.log(\"the user id:\"+userId);\r\n    //         },\r\n    //       ),\r\n    //   )\r\n    //   .catch(e => console.log('err', e));\r\n\r\n    // firebase\r\n    //   .database()\r\n    //   .ref('/Ride_confirm/' + result)\r\n    //   .once('value')\r\n    //   .then(function (snapshot) {\r\n    //     if (snapshot.exists()) {\r\n    //       this.setState({ isModalVisible: true });\r\n    //     }\r\n    //   })\r\n    //   .then(() => {\r\n    //     console.log('');\r\n    //   })\r\n    //   .catch(e => console.log('err', e));\r\n  };\r\n\r\n  storeUserLocation() {\r\n    //var userLatitude=this.state.region.latitude;\r\n    //var userLongitude=this.state.region.longitude;\r\n    //if(userLatitude>0 && userLongitude>0){\r\n\r\n    // RiderID = firebase.auth().currentUser.uid;\r\n    // if (RiderID) {\r\n    //   firebase\r\n    //     .database()\r\n    //     .ref(`Riders/${RiderID}/RiderCurrentLocation/`)\r\n    //     .set({\r\n    //       latitude: this.state.region.latitude,\r\n    //       longitude: this.state.region.longitude,\r\n    //     })\r\n    //     .then(\r\n    //       () => {\r\n    //         //firebase.database().ref(`Payments/${RiderID}/PaymentsHistory`);\r\n    //         //Toast.show(\"payments updated successfully\",Toast.SHORT);\r\n    //         console.log(\r\n    //           'latitude:' +\r\n    //             this.state.region.latitude +\r\n    //             '   longitude:' +\r\n    //             this.state.region.latitude,\r\n    //         );\r\n    //       },\r\n    //       error => {\r\n    //         //Toast.show(error.message,Toast.SHORT);\r\n    //         console.log('error with location:' + error);\r\n    //       },\r\n    //     );\r\n    // }\r\n\r\n    // }\r\n  }\r\n}\r\n\r\n//------------ STYLESHEET--------------------//\r\nconst styles = StyleSheet.create({\r\n  containerView: {\r\n    flex: 1,\r\n    backgroundColor: '#42A5F1',\r\n  },\r\n  footer: {\r\n    backgroundColor: '#ffffff',\r\n    height: 50,\r\n    paddingBottom: 10\r\n  },\r\n  map: {\r\n    height: 610,\r\n    marginTop: 0,\r\n  },\r\n  searchBoxView: {\r\n    flexDirection: 'row',\r\n    backgroundColor: 'white',\r\n    width: 320,\r\n    minHeight: 45,\r\n    position: 'absolute',\r\n    top: 10,\r\n    left: 20,\r\n    borderRadius: 5,\r\n    elevation: 5,\r\n  },\r\n  searchIcon: {\r\n    color: '#42A5F5',\r\n    marginTop: 12,\r\n    marginLeft: 20,\r\n  },\r\n  DropUpLocation: {\r\n    alignSelf: 'stretch',\r\n    width: 280,\r\n    paddingBottom: 2,\r\n    marginTop: -3,\r\n    marginLeft: 8,\r\n    backgroundColor: '#fff',\r\n    fontSize: 17,\r\n  },\r\n  pickupImage: {\r\n    marginLeft: 8,\r\n    marginTop: 10,\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n  DoneButton: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#42A5F1',\r\n    height: 40,\r\n    width: 350,\r\n    marginLeft: 3,\r\n  },\r\n});\r\nAppRegistry.registerComponent('RiderHomeContents', () => RiderHomeContents);\r\n"]},"metadata":{},"sourceType":"module"}