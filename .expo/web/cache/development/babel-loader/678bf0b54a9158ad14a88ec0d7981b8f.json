{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\workspace\\\\Theme\\\\Native\\\\recipes-app-react-native\\\\src\\\\screens\\\\login\\\\LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-button\";\nimport { AppStyles } from \"../AppStyles\";\nimport { Actions } from 'react-native-router-flux';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onPressLogin = function (e) {\n      Actions.appcontent({\n        hideNavBar: true\n      });\n    };\n\n    _this.onPressFacebook = function () {};\n\n    _this.onPressGoogle = function () {};\n\n    _this.state = {\n      loading: false,\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: [styles.title, styles.leftTitle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, \"Sign In\"), React.createElement(View, {\n        style: styles.InputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.body,\n        placeholder: \"E-mail or phone number\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        value: this.state.email,\n        placeholderTextColor: AppStyles.color.grey,\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.InputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.body,\n        secureTextEntry: true,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        value: this.state.password,\n        placeholderTextColor: AppStyles.color.grey,\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      })), React.createElement(Button, {\n        containerStyle: styles.loginContainer,\n        style: styles.loginText,\n        onPress: function onPress(e) {\n          return _this2.onPressLogin(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }\n      }, \"Log in\"), React.createElement(Text, {\n        style: styles.or,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }\n      }, \"OR\"), React.createElement(Button, {\n        containerStyle: styles.facebookContainer,\n        style: styles.facebookText,\n        onPress: function onPress() {\n          return _this2.onPressFacebook();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }\n      }, \"Login with Facebook\"), this.state.loading ? React.createElement(ActivityIndicator, {\n        style: {\n          marginTop: 30\n        },\n        size: \"large\",\n        animating: this.state.loading,\n        color: AppStyles.color.tint,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }\n      }) : React.createElement(Button, {\n        style: styles.googleContainer,\n        size: styles.facebookText,\n        onPress: this.onPressGoogle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  or: {\n    color: \"black\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  title: {\n    fontSize: AppStyles.fontSize.title,\n    fontWeight: \"bold\",\n    color: AppStyles.color.tint,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  leftTitle: {\n    alignSelf: \"stretch\",\n    textAlign: \"center\"\n  },\n  content: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    textAlign: \"center\",\n    fontSize: AppStyles.fontSize.content,\n    color: AppStyles.color.text\n  },\n  loginContainer: {\n    width: AppStyles.buttonWidth.main,\n    backgroundColor: AppStyles.color.tint,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30\n  },\n  loginText: {\n    color: AppStyles.color.white\n  },\n  placeholder: {\n    color: \"red\"\n  },\n  InputContainer: {\n    width: AppStyles.textInputWidth.main,\n    marginTop: 30,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: AppStyles.color.grey,\n    borderRadius: AppStyles.borderRadius.main\n  },\n  body: {\n    height: 42,\n    paddingLeft: 20,\n    paddingRight: 20,\n    color: AppStyles.color.text\n  },\n  facebookContainer: {\n    width: 192,\n    backgroundColor: AppStyles.color.facebook,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30\n  },\n  facebookText: {\n    color: AppStyles.color.white\n  },\n  googleContainer: {\n    width: 192,\n    height: 48,\n    marginTop: 30\n  },\n  googleText: {\n    color: AppStyles.color.white\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["E:/workspace/Theme/Native/recipes-app-react-native/src/screens/login/LoginScreen.js"],"names":["React","Button","AppStyles","Actions","AsyncStorage","LoginScreen","props","onPressLogin","e","appcontent","hideNavBar","onPressFacebook","onPressGoogle","state","loading","email","password","styles","container","title","leftTitle","InputContainer","body","text","setState","color","grey","loginContainer","loginText","or","facebookContainer","facebookText","marginTop","tint","googleContainer","Component","StyleSheet","create","flex","flexDirection","alignItems","justifyContent","marginBottom","fontSize","fontWeight","alignSelf","textAlign","content","paddingLeft","paddingRight","width","buttonWidth","main","backgroundColor","borderRadius","padding","white","placeholder","textInputWidth","borderWidth","borderStyle","borderColor","height","facebook","googleText"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  Alert,\n  ActivityIndicator,\n} from \"react-native\";\nimport Button from \"react-native-button\";\nimport { AppStyles } from \"../AppStyles\";\nimport { Actions } from 'react-native-router-flux'\n\n// import { GoogleSignin, GoogleSigninButton } from \"react-native-google-signin\";\nimport { AsyncStorage } from \"react-native\";\n// const FBSDK = require(\"react-native-fbsdk\");\n// const { LoginManager, AccessToken } = FBSDK;\n\nclass LoginScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      email: \"\",\n      password: \"\"\n    };\n    // GoogleSignin.configure({\n    //   webClientId:\n    //     \"706061484183-l0l58dds4kg329fh1trbiha1ci5rqm5n.apps.googleusercontent.com\"\n    // });\n  }\n\n  onPressLogin = (e) => {\n    \n    // this.props.navigation.navigate('Home');\n    Actions.appcontent({hideNavBar: true});\n    // const { email, password } = this.state;\n    // if (email.length <= 0 || password.length <= 0) {\n    //   alert(\"Please fill out the required fields.\");\n    //   return;\n    // }\n    // auth()\n    //   .signInWithEmailAndPassword(email, password)\n    //   .then(response => {\n    //     const { navigation } = this.props;\n    //     user_uid = response.user._user.uid;\n    //     firestore()\n    //       .collection(\"users\")\n    //       .doc(user_uid)\n    //       .get()\n    //       .then(function(user) {\n    //         if (user.exists) {\n    //           AsyncStorage.setItem(\"@loggedInUserID:id\", user_uid);\n    //           AsyncStorage.setItem(\"@loggedInUserID:key\", email);\n    //           AsyncStorage.setItem(\"@loggedInUserID:password\", password);\n    //           navigation.dispatch({ type: \"Login\", user: user });\n    //         } else {\n    //           alert(\"User does not exist. Please try again.\");\n    //         }\n    //       })\n    //       .catch(function(error) {\n    //         const { code, message } = error;\n    //         alert(message);\n    //       });\n    //   })\n    //   .catch(error => {\n    //     const { code, message } = error;\n    //     alert(message);\n    //     // For details of error codes, see the docs\n    //     // The message contains the default Firebase string\n    //     // representation of the error\n    //   });\n  };\n\n  onPressFacebook = () => {\n    // LoginManager.logInWithPermissions([\n    //   \"public_profile\",\n    //   \"user_friends\",\n    //   \"email\"\n    // ]).then(\n    //   result => {\n    //     if (result.isCancelled) {\n    //       alert(\"Whoops!\", \"You cancelled the sign in.\");\n    //     } else {\n    //       AccessToken.getCurrentAccessToken().then(data => {\n    //         // const credential = firebase.auth.FacebookAuthProvider.credential(\n    //         //   data.accessToken\n    //         // );\n    //         const accessToken = data.accessToken;\n    //         auth()\n    //           .signInWithCredential(credential)\n    //           .then(result => {\n    //             var user = result.user;\n    //             AsyncStorage.setItem(\n    //               \"@loggedInUserID:facebookCredentialAccessToken\",\n    //               accessToken\n    //             );\n    //             AsyncStorage.setItem(\"@loggedInUserID:id\", user.uid);\n    //             var userDict = {\n    //               id: user.uid,\n    //               fullname: user.displayName,\n    //               email: user.email,\n    //               profileURL: user.photoURL\n    //             };\n    //             var data = {\n    //               ...userDict,\n    //               appIdentifier: \"rn-android-universal-listings\"\n    //             };\n    //             firestore()\n    //               .collection(\"users\")\n    //               .doc(user.uid)\n    //               .set(data);\n    //             this.props.navigation.dispatch({\n    //               type: \"Login\",\n    //               user: userDict\n    //             });\n    //           })\n    //           .catch(error => {\n    //             alert(\"Please try again! \" + error);\n    //           });\n    //       });\n    //     }\n    //   },\n    //   error => {\n    //     Alert.alert(\"Sign in error\", error);\n    //   }\n    // );\n  };\n\n  onPressGoogle = () => {\n    // this.setState({ loading: true });\n    // GoogleSignin.signIn()\n    //   .then(data => {\n    //     console.log(\"data\", data);\n    //     // Create a new Firebase credential with the token\n    //     const credential = firebase.auth.GoogleAuthProvider.credential(\n    //       data.idToken\n    //     );\n    //     // Login with the credential\n    //     const accessToken = data.idToken;\n    //     AsyncStorage.setItem(\n    //       \"@loggedInUserID:googleCredentialAccessToken\",\n    //       accessToken\n    //     );\n    //     return auth().signInWithCredential(credential);\n    //   })\n    //   .then(result => {\n    //     this.setState({ loading: false });\n    //     var user = result.user;\n    //     AsyncStorage.setItem(\"@loggedInUserID:id\", user.uid);\n    //     var userDict = {\n    //       id: user.uid,\n    //       fullname: user.displayName,\n    //       email: user.email,\n    //       photoURL: user.photoURL\n    //     };\n    //     var data = {\n    //       ...userDict,\n    //       appIdentifier: \"rn-android-universal-listings\"\n    //     };\n    //     console.log(\"data\", data);\n    //     firestore()\n    //       .collection(\"users\")\n    //       .doc(user.uid)\n    //       .set(data);\n    //     this.props.navigation.dispatch({\n    //       type: \"Login\",\n    //       user: userDict\n    //     });\n    //   })\n    //   .catch(error => {\n    //     const { code, message } = error;\n    //     this.setState({ loading: false }, () => {\n    //       alert(error);\n    //     });\n    //   });\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={[styles.title, styles.leftTitle]}>Sign In</Text>\n        <View style={styles.InputContainer}>\n          <TextInput\n            style={styles.body}\n            placeholder=\"E-mail or phone number\"\n            onChangeText={text => this.setState({ email: text })}\n            value={this.state.email}\n            placeholderTextColor={AppStyles.color.grey}\n            underlineColorAndroid=\"transparent\"\n          />\n        </View>\n        <View style={styles.InputContainer}>\n          <TextInput\n            style={styles.body}\n            secureTextEntry={true}\n            placeholder=\"Password\"\n            onChangeText={text => this.setState({ password: text })}\n            value={this.state.password}\n            placeholderTextColor={AppStyles.color.grey}\n            underlineColorAndroid=\"transparent\"\n          />\n        </View>\n        <Button\n          containerStyle={styles.loginContainer}\n          style={styles.loginText}\n          onPress={(e) => this.onPressLogin(e)}\n        >\n          Log in\n        </Button>\n        <Text style={styles.or}>OR</Text>\n        <Button\n          containerStyle={styles.facebookContainer}\n          style={styles.facebookText}\n          onPress={() => this.onPressFacebook()}\n        >\n          Login with Facebook\n        </Button>\n        {this.state.loading ? (\n          <ActivityIndicator\n            style={{ marginTop: 30 }}\n            size=\"large\"\n            animating={this.state.loading}\n            color={AppStyles.color.tint}\n          />\n        ) : (\n          <Button\n            style={styles.googleContainer}\n            size={styles.facebookText}\n            onPress={this.onPressGoogle}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  or: {\n    color: \"black\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  title: {\n    fontSize: AppStyles.fontSize.title,\n    fontWeight: \"bold\",\n    color: AppStyles.color.tint,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  leftTitle: {\n    alignSelf: \"stretch\",\n    textAlign: \"center\",\n  },\n  content: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    textAlign: \"center\",\n    fontSize: AppStyles.fontSize.content,\n    color: AppStyles.color.text\n  },\n  loginContainer: {\n    width: AppStyles.buttonWidth.main,\n    backgroundColor: AppStyles.color.tint,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30\n  },\n  loginText: {\n    color: AppStyles.color.white\n  },\n  placeholder: {\n    color: \"red\"\n  },\n  InputContainer: {\n    width: AppStyles.textInputWidth.main,\n    marginTop: 30,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: AppStyles.color.grey,\n    borderRadius: AppStyles.borderRadius.main\n  },\n  body: {\n    height: 42,\n    paddingLeft: 20,\n    paddingRight: 20,\n    color: AppStyles.color.text\n  },\n  facebookContainer: {\n    width: 192,\n    backgroundColor: AppStyles.color.facebook,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30\n  },\n  facebookText: {\n    color: AppStyles.color.white\n  },\n  googleContainer: {\n    width: 192,\n    height: 48,\n    marginTop: 30\n  },\n  googleText: {\n    color: AppStyles.color.white\n  }\n});\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}