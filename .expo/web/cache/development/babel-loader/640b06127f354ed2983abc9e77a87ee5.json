{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\workspace\\\\Native\\\\TaxiCall\\\\src\\\\screens\\\\rider\\\\RiderHome.js\";\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport { createAppContainer } from 'react-navigation';\nimport { createDrawerNavigator, DrawerItems } from 'react-navigation-drawer';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport RiderHomeContents from \"./RiderHomeContents\";\nimport RiderPickUp from \"./RiderPickUp\";\nimport RiderPayments from \"./RiderPayments\";\nimport RiderSettings from \"./RiderSettings\";\nimport RiderHistory from \"./RiderHistory\";\nimport RiderNotifications from \"./RiderNotifications\";\nimport RiderHelp from \"./RiderHelp\";\nimport RiderLogout from \"./RiderLogout\";\nimport { Content, Container, Header, Left, Icon, Footer, Body } from 'native-base';\n\nvar customDrawerContentComponent = function customDrawerContentComponent(props) {\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 3\n    }\n  }, React.createElement(Header, {\n    style: {\n      height: 200,\n      backgroundColor: '#42A5F5'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(Body, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../Images/avatar.png\"),\n    style: {\n      width: 100,\n      height: 100,\n      borderRadius: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: '#ffffff',\n      fontWeight: 'bold',\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Alex Daniel\"))), React.createElement(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, React.createElement(DrawerItems, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }))));\n};\n\nexport var MyStackNav = createStackNavigator({\n  Main: {\n    screen: RiderHomeContents\n  },\n  pickUpLocation: {\n    screen: RiderPickUp\n  }\n}, {\n  headerMode: 'none',\n  navigationOptions: {\n    header: null,\n    headerVisible: false\n  }\n});\nvar MyDrawerNav = createDrawerNavigator({\n  Home: MyStackNav,\n  Payments: RiderPayments,\n  Settings: RiderSettings,\n  History: RiderHistory,\n  Notifications: RiderNotifications,\n  Help: RiderHelp,\n  Logout: RiderLogout\n}, {\n  initialRouteName: 'Home',\n  contentComponent: customDrawerContentComponent,\n  drawerOpenRoute: 'DrawerOpen',\n  drawerCloseRoute: 'DrawerClose',\n  drawerToggleRoute: 'DrawerToggle'\n}, {\n  headerMode: 'none',\n  navigationOptions: {\n    header: null,\n    headerVisible: false\n  }\n});\nvar AppContainer = createAppContainer(MyDrawerNav);\nexport default AppContainer;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["E:/workspace/Native/TaxiCall/src/screens/rider/RiderHome.js"],"names":["React","AsyncStorage","createAppContainer","createDrawerNavigator","DrawerItems","createStackNavigator","RiderHomeContents","RiderPickUp","RiderPayments","RiderSettings","RiderHistory","RiderNotifications","RiderHelp","RiderLogout","Content","Container","Header","Left","Icon","Footer","Body","customDrawerContentComponent","props","height","backgroundColor","alignItems","justifyContent","require","width","borderRadius","color","fontWeight","fontSize","MyStackNav","Main","screen","pickUpLocation","headerMode","navigationOptions","header","headerVisible","MyDrawerNav","Home","Payments","Settings","History","Notifications","Help","Logout","initialRouteName","contentComponent","drawerOpenRoute","drawerCloseRoute","drawerToggleRoute","AppContainer","styles","StyleSheet","create","container","flex"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Button,\r\n  AsyncStorage,\r\n  Image,\r\n  YellowBox,\r\n} from 'react-native';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport {createDrawerNavigator, DrawerItems } from 'react-navigation-drawer'\r\nimport {createStackNavigator} from 'react-navigation-stack'\r\n\r\nimport RiderHomeContents from './RiderHomeContents';\r\nimport RiderPickUp from './RiderPickUp';\r\nimport RiderPayments from './RiderPayments';\r\nimport RiderSettings from './RiderSettings';\r\nimport RiderHistory from './RiderHistory';\r\nimport RiderNotifications from './RiderNotifications';\r\nimport RiderHelp from './RiderHelp';\r\nimport RiderLogout from './RiderLogout';\r\n\r\nimport {\r\n  Content,\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Icon,\r\n  Footer,\r\n  Body,\r\n} from 'native-base';\r\n// import * as firebase from 'firebase';\r\n// import ApiKeys from '../constants/ApiKeys';\r\n\r\n// export default class RiderHome extends React.Component {\r\n//   static navigationOptions = {\r\n//     header: null,\r\n//   };\r\n\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     // if (!firebase.apps.length) {\r\n//     //   firebase.initializeApp(ApiKeys.FirebaseConfig);\r\n//     // }\r\n//   }\r\n//   componentDidMount() {\r\n//     /* firebase.database().ref('/Riders/' + firebase.auth().currentUser.uid+'/Details').once('value').then(function(snapshot) {\r\n//      firstname = snapshot.child('firstname').val();\r\n//      lastname = snapshot.child('lastname').val();\r\n\r\n//    }).then(()=>{\r\n//     console.log(\"fine\");\r\n\r\n//    },(error)=>{\r\n//     console.error(\"error\"+error);\r\n//    });*/\r\n//     //AsyncStorage.clear();\r\n//     // AsyncStorage.getItem('riderId')\r\n//     //   .then(result =>\r\n//     //     firebase\r\n//     //       .database()\r\n//     //       .ref('/Riders/' + result + '/Details')\r\n//     //       .once('value')\r\n//     //       .then(function (snapshot) {\r\n//     //         firstname = snapshot.child('firstname').val();\r\n//     //         lastname = snapshot.child('lastname').val();\r\n//     //       })\r\n//     //       .then(\r\n//     //         () => {\r\n//     //           //console.log(\"fine\"+result);\r\n//     //         },\r\n//     //         error => {\r\n//     //           console.error('error' + error);\r\n//     //           console.log('the user id:' + userId);\r\n//     //         },\r\n//     //       ),\r\n//     //   )\r\n//     //   .catch(e => console.log('err', e));\r\n\r\n//     // YellowBox.ignoreWarnings(['Encountered an error loading page']);\r\n//     // console.disableYellowBox = true;\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <View style={styles.container}>\r\n//         <MyDrawerNav />\r\n//       </View>\r\n//     );\r\n//   }\r\n//   _signOutAsync = async () => {\r\n//     await AsyncStorage.clear();\r\n//     // this.props.navigation.navigate('Auth');\r\n//   };\r\n// }\r\nconst customDrawerContentComponent = props => (\r\n  <Container>\r\n    <Header style={{ height: 200, backgroundColor: '#42A5F5' }}>\r\n      <Body style={{ alignItems: 'center', justifyContent: 'center' }}>\r\n        <Image\r\n          source={require('../Images/avatar.png')}\r\n          style={{ width: 100, height: 100, borderRadius: 100 }}\r\n        />\r\n        <Text style={{ color: '#ffffff', fontWeight: 'bold', fontSize: 20 }}>\r\n          {/* {this.firstname + ' ' + this.lastname} */}Alex Daniel\r\n        </Text>\r\n      </Body>\r\n    </Header>\r\n    <Content>\r\n      <DrawerItems {...props} />\r\n    </Content>\r\n  </Container>\r\n);\r\n//drawerNavigator\r\nexport const MyStackNav = createStackNavigator(\r\n  {\r\n    Main: { screen: RiderHomeContents },\r\n    pickUpLocation: { screen: RiderPickUp },\r\n  },\r\n  {\r\n    headerMode: 'none',\r\n    navigationOptions: {\r\n      header: null,\r\n      headerVisible: false,\r\n    },\r\n  },\r\n);\r\n\r\nconst MyDrawerNav = createDrawerNavigator(\r\n  {\r\n    Home: MyStackNav,\r\n    Payments: RiderPayments,\r\n    Settings: RiderSettings,\r\n    History: RiderHistory,\r\n    Notifications: RiderNotifications,\r\n    Help: RiderHelp,\r\n    Logout: RiderLogout,\r\n  },\r\n  {\r\n    initialRouteName: 'Home',\r\n    contentComponent: customDrawerContentComponent,\r\n    drawerOpenRoute: 'DrawerOpen',\r\n    drawerCloseRoute: 'DrawerClose',\r\n    drawerToggleRoute: 'DrawerToggle',\r\n  },\r\n  {\r\n    headerMode: 'none',\r\n    navigationOptions: {\r\n      header: null,\r\n      headerVisible: false,\r\n    },\r\n  },\r\n);\r\nconst AppContainer = createAppContainer(MyDrawerNav);\r\nexport default AppContainer;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}