{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\workspace\\\\Theme\\\\Native\\\\recipes-app-react-native\\\\src\\\\screens\\\\Map\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, PropTypes } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { YandexMapKit, YandexMapView } from 'react-native-yandexmapkit';\nimport { YANDEXMAPKIT_API_KEY } from 'react-native-dotenv';\nYandexMapKit.setApiKey(YANDEXMAPKIT_API_KEY);\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      region: {\n        latitude: 59.947212,\n        longitude: 30.336098,\n        latitudeDelta: 0.09764120700999257,\n        longitudeDelta: 0.1235961914638466\n      },\n      address: ''\n    };\n\n    _this.onInteraction = function (event) {\n      var latitude = event.latitude,\n          longitude = event.longitude,\n          latitudeDelta = event.latitudeDelta,\n          longitudeDelta = event.longitudeDelta,\n          type = event.type;\n      console.log('Interaction', latitude, longitude, latitudeDelta, longitudeDelta, type);\n\n      _this.setState({\n        region: {\n          latitude: latitude,\n          longitude: longitude,\n          latitudeDelta: latitudeDelta,\n          longitudeDelta: longitudeDelta\n        }\n      });\n    };\n\n    _this.onGeocoding = function (short, full) {\n      console.log('Geocoding response:', short, full);\n\n      if (short) {\n        _this.setState({\n          address: short.displayName\n        });\n      }\n    };\n\n    _this.resetRegion = function () {\n      _this.refs['yandexMap'].animateToCoordinate();\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state$region = this.state.region,\n          latitude = _this$state$region.latitude,\n          longitude = _this$state$region.longitude,\n          latitudeDelta = _this$state$region.latitudeDelta,\n          longitudeDelta = _this$state$region.longitudeDelta;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, React.createElement(YandexMapView, {\n        ref: \"yandexMap\",\n        onInteraction: this.onInteraction,\n        region: this.state.region,\n        showMyLocation: true,\n        geocodingEnabled: true,\n        onGeocoding: this.onGeocoding,\n        showMyLocationButton: true,\n        disableAndroidGeocoding: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.info,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, latitude.toPrecision(4) + \" - \" + longitude.toPrecision(4) + \" (\" + latitudeDelta.toPrecision(4) + \" - \" + longitudeDelta.toPrecision(4) + \")\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, this.state.address)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  buttonOverlay: {\n    position: 'absolute',\n    left: 16,\n    right: 16,\n    top: 16,\n    height: 48,\n    backgroundColor: 'rgba(255,255,255,0.75)',\n    alignItems: 'stretch'\n  },\n  button: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  info: {\n    position: 'absolute',\n    left: 16,\n    right: 16,\n    bottom: 16,\n    height: 48,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(255,255,255,0.75)'\n  }\n});","map":{"version":3,"sources":["E:/workspace/Theme/Native/recipes-app-react-native/src/screens/Map/index.js"],"names":["React","Component","PropTypes","YandexMapKit","YandexMapView","YANDEXMAPKIT_API_KEY","setApiKey","App","state","region","latitude","longitude","latitudeDelta","longitudeDelta","address","onInteraction","event","type","console","log","setState","onGeocoding","short","full","displayName","resetRegion","refs","animateToCoordinate","styles","container","info","toPrecision","StyleSheet","create","flex","buttonOverlay","position","left","right","top","height","backgroundColor","alignItems","button","justifyContent","bottom"],"mappings":"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","sourcesContent":["import React, {Component, PropTypes} from 'react';\r\nimport {View, Text, TouchableOpacity, StyleSheet} from 'react-native';\r\nimport { YandexMapKit, YandexMapView } from 'react-native-yandexmapkit';\r\nimport { YANDEXMAPKIT_API_KEY } from 'react-native-dotenv';\r\n\r\nYandexMapKit.setApiKey(YANDEXMAPKIT_API_KEY);\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    region: {\r\n      latitude: 59.947212,\r\n      longitude: 30.336098,\r\n      latitudeDelta: 0.09764120700999257,\r\n      longitudeDelta: 0.1235961914638466,\r\n    },\r\n    address: ''\r\n  };\r\n\r\n  render() {\r\n    const {latitude, longitude, latitudeDelta, longitudeDelta} = this.state.region;\r\n    return (\r\n      <View style={styles.container}>\r\n        <YandexMapView ref=\"yandexMap\" onInteraction={this.onInteraction} region={this.state.region}\r\n                       showMyLocation={true} geocodingEnabled={true} onGeocoding={this.onGeocoding}\r\n                       showMyLocationButton={true} disableAndroidGeocoding={false}/>\r\n        <View style={styles.info}>\r\n          <Text>{`${latitude.toPrecision(4)} - ${longitude.toPrecision(4)} (${latitudeDelta.toPrecision(4)} - ${longitudeDelta.toPrecision(4)})`}</Text>\r\n          <Text>{this.state.address}</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  onInteraction = (event) => {\r\n    const {latitude, longitude, latitudeDelta, longitudeDelta, type} = event;\r\n    console.log('Interaction', latitude, longitude, latitudeDelta, longitudeDelta, type);\r\n    this.setState({region: {latitude, longitude, latitudeDelta, longitudeDelta}});\r\n  };\r\n\r\n  onGeocoding = (short, full) => {\r\n    console.log('Geocoding response:', short, full);\r\n    if (short){\r\n      this.setState({address: short.displayName});\r\n    }\r\n  };\r\n\r\n  resetRegion = () => {\r\n    this.refs['yandexMap'].animateToCoordinate();\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  buttonOverlay: {\r\n    position: 'absolute',\r\n    left: 16,\r\n    right: 16,\r\n    top: 16,\r\n    height: 48,\r\n    backgroundColor: 'rgba(255,255,255,0.75)',\r\n    alignItems: 'stretch'\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  info: {\r\n    position: 'absolute',\r\n    left: 16,\r\n    right: 16,\r\n    bottom: 16,\r\n    height: 48,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'rgba(255,255,255,0.75)',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}